{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualMachines_adminPassword" : {
          "Type": "SecureString"
      },
      "virtualMachines_adminUsername": {
        "Type": "String"
      },
      "DomainAdminUserName":{
        "Type": "String"
      },
      "DomainAdminPassword":{
        "Type": "SecureString"
      },
        "virtualmachines_vmSize": {
        "Type": "String"
      },
      "location": {
        "Type": "String"
      },
        "registrationKey": {
            "type": "string",
            "metadata": {
                "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
            }
        },
        "registrationUrl": {
            "type": "string",
            "metadata": {
                "description": "Registration url of the Azure Automation DSC pull/reporting server"
            }
        },
        "configurationMode": {
            "type": "string",
            "defaultValue": "ApplyAndAutoCorrect",
            "allowedValues": [
                "ApplyOnly",
                "ApplyAndMonitor",
                "ApplyAndAutoCorrect"
            ],
            "metadata": {
                "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
            }
        },
        "configurationModeFrequencyMins": {
            "type": "int",
            "defaultValue": 15,
            "metadata": {
                "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
            }
        },
        "refreshFrequencyMins": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "DSC agent (LCM) refresh frequency setting, in minutes"
            }
        },
        "rebootNodeIfNeeded": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
            }
        },
        "actionAfterReboot": {
            "type": "string",
            "defaultValue": "ContinueConfiguration",
            "allowedValues": [
                "ContinueConfiguration",
                "StopConfiguration"
            ],
            "metadata": {
                "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
            }
        },
        "allowModuleOverwrite": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "DSC agent (LCM) allowModuleOverwrite setting"
            }
        },
        "timestamp": {
            "type": "string",
            "defaultValue": "MM/dd/yyyy H:mm:ss tt",
            "metadata": {
                "description": "The current datetime, as a string, to force the request to go through ARM even if all fields are the same as last ARM deployment of this template; example in parameters file is in MM/dd/yyyy H:mm:ss tt format"
            }
        },
      "configurationURI": {
        "Type": "String"
      },
      "configurationName": {
        "Type": "String"
      },
    "jobId": {
      "type": "string",
      "metadata": {
        "description": "the job id to compile the configuration"
      }
    },
    "jobConfigurationData": {
      "type": "string",
      "metadata": {
        "description": "Escaped Json of DSC ConfigurationData"
      }
    }
  },
  "variables": {
    "computeApi": "2016-03-30",
    "networkApi": "2016-03-30",
    "storageApi": "2015-06-15",
    "insightsApi": "2015-04-01",
    "automationApiVersion": "2015-10-31",
    "azureAutomation_accountName": "[concat('azureautomation-',resourceGroup().Name)]",
    "storageAccountName":  "[concat('storage',toLower(resourceGroup().Name))]",
    "virtualMachines_vm1Name": "DC1",
    "virtualMachines_vm2Name": "DC2",
    "virtualMachines_vm3Name": "DC3",
    "virtualMachines_vm4Name": "Server1",
    "virtualMachines_vm5Name": "Client1",
    "virtualMachines_domainName": "testdomain.local",
    "azureautomation_vm1ConfigurationName": "[concat(parameters('configurationName'), '.', variables('virtualMachines_vm1Name'))]",
    "azureautomation_vm2ConfigurationName": "[concat(parameters('configurationName'), '.', variables('virtualMachines_vm2Name'))]",
    "azureautomation_vm3ConfigurationName": "[concat(parameters('configurationName'), '.', variables('virtualMachines_vm3Name'))]",
    "azureautomation_vm4ConfigurationName": "[concat(parameters('configurationName'), '.', variables('virtualMachines_vm4Name'))]",
    "networkInterfaces_nic1Name": "NIC1",
    "networkInterfaces_nic2Name": "NIC2",
    "networkInterfaces_nic3Name": "NIC3",
    "networkInterfaces_nic4Name": "NIC4",
    "networkInterfaces_nic5Name": "NIC5",
    "sourceRootURI": "https://raw.githubusercontent.com/murrahjm/AzureRM-DSC-ADTest/master",
    "dscModules": {
      "xActiveDirectory": {
        "moduleName": "xActiveDirectory",
        "moduleURI": "https://raw.githubusercontent.com/murrahjm/AzureRM-DSC-ADTest/master/DSCModules/xActiveDirectory.zip"
      },
      "xPSDesiredStateConfiguration": {
        "moduleName": "xPSDesiredStateConfiguration",
        "moduleURI": "https://raw.githubusercontent.com/murrahjm/AzureRM-DSC-ADTest/master/DSCModules/xPSDesiredStateConfiguration.zip"
      }
    }
  },
  "resources": [
        {
            "type": "Microsoft.Automation/automationAccounts",
            "name": "[variables('azureautomation_AccountName')]",
            "apiVersion": "[variables('automationApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "sku": {
                    "name": "Free"
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('azureautomation_accountname'), '/', variables('dscModules').xActiveDirectory.ModuleName)]",
                    "type": "microsoft.automation/automationAccounts/Modules",
                    "apiVersion": "[variables('automationApiVersion')]",
                    "tags": {},
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'))]"
                    ],
                    "properties": {
                        "contentLink": {
                            "uri": "[variables('dscModules').xActiveDirectory.ModuleUri]"
                        }
                    }
                },
                {
                    "name": "[concat(variables('azureautomation_accountname'), '/', variables('dscModules').xPSDesiredStateConfiguration.ModuleName)]",
                    "type": "microsoft.automation/automationAccounts/Modules",
                    "apiVersion": "[variables('automationApiVersion')]",
                    "tags": {},
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'))]"
                    ],
                    "properties": {
                        "contentLink": {
                            "uri": "[variables('dscModules').xPSDesiredStateConfiguration.ModuleUri]"
                        }
                    }
                },
                {
                    "name": "[parameters('configurationName')]",
                    "type": "Configurations",
                    "apiVersion": "[variables('automationApiVersion')]",
                    "location": "[parameters('location')]",
                    "tags": {},
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'))]"
                    ],
                    "properties": {
                        "logVerbose": "false",
                        "description": "ad test configuration",
                        "state": "Published",
                        "overwrite": "True",
                        "Source": {
                            "type": "uri",
                            "Value": "[parameters('configurationURI')]"
                        }
                    }
                },
                {
                    "name": "[parameters('jobID')]",
                    "type": "Compilationjobs",
                    "apiVersion": "[variables('automationApiVersion')]",
                    "location": "parameters('location')]",
                    "tags": {},
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'),'/Modules/',variables('dscModules').xActiveDirectory.ModuleName)]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'),'/Modules/',variables('dscModules').xPSDesiredStateConfiguration.ModuleName)]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('azureautomation_accountname'),'/Configurations/', parameters('configurationName'))]"
                    ],
                    "properties": {
                        "configuration": {
                            "name": "[parameters('configurationName')]"
                        },
                      "parameters": {
                        "ConfigurationData": "[parameters('jobConfigurationData')]"  
                      }
                    }
                }
            ]
        },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm1Name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm1Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm1Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm1Name')]",
          "adminUsername": "[parameters('virtualMachines_AdminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic1Name'))]"
            }
          ]
        }
      },
      "resources": [
              {
                  "type": "extensions",
                  "name": "[concat(variables('virtualMachines_vm1Name'), '-DSCExtension')]",
                  "apiVersion": "2016-03-30",
                  "location": "[resourceGroup().location]",
                  "tags": {},
                  "dependsOn": [
                      "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_vm1Name'))]"
                  ],
                  "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.24",
                      "autoUpgradeMinorVersion": false,
                      "settings": {
                          "modulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
                          "sasToken": "",
                          "configurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
                          "properties": [
                            {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                            },
                            {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "NodeConfigurationName",
                            "Value": "[variables('azureautomation_vm1ConfigurationName')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                            }
                          ]
                      },
                      "protectedSettings": {
                        "Items": {
                            "registrationKeyPrivate": "[parameters('registrationKey')]"
                        },
                        "configurationArguments": {
                          "DomainAdminCredential": {
                            "username": "[parameters('DomainAdminUserName')]",
                            "password": "[parameters('DomainAdminPassword')]"
                          }
                        }
                      }
                  }
              }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm2Name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm2Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm2Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm2Name')]",
          "adminUsername": "[parameters('virtualMachines_AdminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic2Name'))]"
            }
          ]
        }
      },
      "resources": [
              {
                  "type": "extensions",
                  "name": "[concat(variables('virtualMachines_vm2Name'), '-DSCExtension')]",
                  "apiVersion": "2016-03-30",
                  "location": "[resourceGroup().location]",
                  "tags": {},
                  "dependsOn": [
                      "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_vm2Name'))]"
                  ],
                  "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.24",
                      "autoUpgradeMinorVersion": false,
                      "settings": {
                          "modulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
                          "sasToken": "",
                          "configurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
                          "properties": [
                            {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                            },
                            {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "NodeConfigurationName",
                            "Value": "[variables('azureautomation_vm2ConfigurationName')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                            }
                          ]
                      },
                      "protectedSettings": {
                        "Items": {
                            "registrationKeyPrivate": "[parameters('registrationKey')]"
                        },
                        "configurationArguments": {
                          "DomainAdminCredential": {
                            "username": "[parameters('DomainAdminUserName')]",
                            "password": "[parameters('DomainAdminPassword')]"
                          }
                        }
                      }
                  }
              }

      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm3Name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm3Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm3Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm3Name')]",
          "adminUsername": "[parameters('virtualMachines_AdminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic3Name'))]"
            }
          ]
        }
      },
      "resources": [
              {
                  "type": "extensions",
                  "name": "[concat(variables('virtualMachines_vm3Name'), '-DSCExtension')]",
                  "apiVersion": "2016-03-30",
                  "location": "[resourceGroup().location]",
                  "tags": {},
                  "dependsOn": [
                      "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_vm3Name'))]"
                  ],
                  "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.24",
                      "autoUpgradeMinorVersion": false,
                      "settings": {
                          "modulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
                          "sasToken": "",
                          "configurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
                          "properties": [
                            {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                            },
                            {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "NodeConfigurationName",
                            "Value": "[variables('azureautomation_vm3ConfigurationName')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                            }
                          ]
                      },
                      "protectedSettings": {
                        "Items": {
                            "registrationKeyPrivate": "[parameters('registrationKey')]"
                        },
                        "configurationArguments": {
                          "DomainAdminCredential": {
                            "username": "[parameters('DomainAdminUserName')]",
                            "password": "[parameters('DomainAdminPassword')]"
                          }
                        }
                      }
                  }
              }

      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic3Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm4Name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm4Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm4Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm4Name')]",
          "adminUsername": "[parameters('virtualMachines_AdminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic4Name'))]"
            }
          ]
        }
      },
      "resources": [
              {
                  "type": "extensions",
                  "name": "[concat(variables('virtualMachines_vm4Name'), '-DSCExtension')]",
                  "apiVersion": "2016-03-30",
                  "location": "[resourceGroup().location]",
                  "tags": {},
                  "dependsOn": [
                      "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachines_vm4Name'))]"
                  ],
                  "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.24",
                      "autoUpgradeMinorVersion": false,
                      "settings": {
                          "modulesUrl": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
                          "sasToken": "",
                          "configurationFunction": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
                          "properties": [
                            {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                            },
                            {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "NodeConfigurationName",
                            "Value": "[variables('azureautomation_vm4ConfigurationName')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                            },
                            {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                            },
                            {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                            },
                            {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                            }
                          ]
                      },
                      "protectedSettings": {
                        "Items": {
                            "registrationKeyPrivate": "[parameters('registrationKey')]"
                        },
                        "configurationArguments": {
                          "DomainAdminCredential": {
                            "username": "[parameters('DomainAdminUserName')]",
                            "password": "[parameters('DomainAdminPassword')]"
                          }
                        }
                      }
                  }
              }

      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic4Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm5Name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftVisualStudio",
            "offer": "Windows",
            "sku": "Windows-10-N-x64",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm5Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm5Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm5Name')]",
          "adminUsername": "[parameters('virtualMachines_AdminUsername')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic5Name'))]"
            }
          ]
        }
      },
      "resources": [

      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic5Name'))]"
      ]
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic1Name')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.1.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'Vnet1'), '/subnets/subnet1')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic2Name')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.2.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'vnet1'), '/subnets/Subnet2')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic3Name')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.3.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'VNet1'), '/subnets/Subnet3')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic4Name')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.1.5",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'VNet1'), '/subnets/subnet1')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic5Name')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.1.6",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP1')]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'VNet1'), '/subnets/subnet1')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP1')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "NSG1",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
         {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllInternal",
            "properties": {
              "description": "allow all internal VM-VM communication",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "192.168.0.0/16",
              "destinationAddressPrefix": "192.168.0.0/16",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "PublicIP1",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "VNet1",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "192.168.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet1",
            "properties": {
              "addressPrefix": "192.168.1.0/24"
            }
          },
          {
            "name": "Subnet2",
            "properties": {
              "addressPrefix": "192.168.2.0/24"
            }
          },
          {
            "name": "Subnet3",
            "properties": {
              "addressPrefix": "192.168.3.0/24"
            }
          }
        ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachines_vm1Name'), '/BGInfo')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachines_vm2Name'), '/BGInfo')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm2Name'))]"
      ]
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm3Name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('virtualMachines_vm3Name'), '/BGInfo')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm4Name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('virtualMachines_vm4Name'), '/BGInfo')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ]
}