{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "virtualMachines_adminPassword" : {
          "Type": "SecureString",
          "defaultValue": null
      },
      "virtualMachines_AdminUsername": {
          "Type": "String"
      },
      "location": {
          "Type": "String"
      },
      "virtualMachines_vmSize": {
          "Type": "String"
      }
  },
  "variables": {
    "azureAutomation_accountName": "[concat('azureautomation_',resourceGroup().Name)]",
    "storageAccountName":  "[concat('Storage_',resourceGroup().Name)]",
    "virtualMachines_vm1Name": "DC1",
    "virtualMachines_vm2Name": "DC2",
    "virtualMachines_vm3Name": "DC3",
    "virtualMachines_vm4Name": "Server1",
    "networkInterfaces_nic1Name": "NIC1",
    "networkInterfaces_nic2Name": "NIC2",
    "networkInterfaces_nic3Name": "NIC3",
    "networkInterfaces_nic4Name": "NIC4"
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[variables('azureAutomation_accountName')]",
      "apiVersion": "2015-10-31",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Free"
      },
      "resources": [],
      "dependsOn": []
    },
    
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm1Name')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "parameters('virtualMachines_vmSize')"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm1Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccuontName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm1Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm1Name')]",
          "adminUsername": "parameters('virtualMachines_AdminUsername')",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic1Name'))]"
            }
          ]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm2Name')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "parameters('virtualMachines_vmSize')"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm2Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccuontName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm2Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm2Name')]",
          "adminUsername": "parameters('virtualMachines_AdminUsername')",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic2Name'))]"
            }
          ]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic2Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm3Name')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "parameters('virtualMachines_vmSize')"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm3Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccuontName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm3Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm3Name')]",
          "adminUsername": "parameters('virtualMachines_AdminUsername')",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic3Name'))]"
            }
          ]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic3Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachines_vm4Name')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "parameters('virtualMachines_vmSize')"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachines_vm4Name')]",
            "createOption": "FromImage",
            "vhd": {
              "uri":  "[concat('https', '://', variables('storageAccuontName'), '.blob.core.windows.net', '/vhds/', variables('virtualMachines_vm4Name'), '.vhd')]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('virtualMachines_vm4Name')]",
          "adminUsername": "parameters('virtualMachines_AdminUsername')",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachines_adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic4Name'))]"
            }
          ]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaces_nic4Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic1Name')]",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.1.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'Vnet1'), '/subnets/subnet1')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'VNet1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic2Name')]",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.2.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'vnet1'), '/subnets/Subnet2')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic3Name')]",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.3.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'VNet1'), '/subnets/Subnet3')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaces_nic4Name')]",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "192.168.1.5",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP1')]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'VNet1'), '/subnets/subnet1')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP1')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'VNet1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "NSG1",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "securityRules": [
         {
            "name": "RDP-rule",
            "properties": {
              "description": "allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllInternal",
            "properties": {
              "description": "allow all internal VM-VM communication",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "192.168.0.0/16",
              "destinationAddressPrefix": "192.168.0.0/16",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "PublicIP1",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "VNet1",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "192.168.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet1",
            "properties": {
              "addressPrefix": "192.168.1.0/24"
            }
          },
          {
            "name": "Subnet2",
            "properties": {
              "addressPrefix": "192.168.2.0/24"
            }
          },
          {
            "name": "Subnet3",
            "properties": {
              "addressPrefix": "192.168.3.0/24"
            }
          }
        ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "parameters('location')",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Azure",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Azure.Storage",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Automation",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Compute",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Profile",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Resources",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Sql",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "AzureRM.Storage",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Microsoft.PowerShell.Core",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Microsoft.PowerShell.Diagnostics",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Microsoft.PowerShell.Management",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Microsoft.PowerShell.Security",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "modules_Microsoft.PowerShell.Utility]",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Microsoft.WSMan.Management",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Orchestrator.AssetManagement.Cmdlets",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": true,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "Pester",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "xActiveDirectory",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/modules",
      "name": "xPSDesiredStateConfiguration",
      "apiVersion": "2015-10-31",
      "properties": {
        "isGlobal": false,
        "version": null,
        "sizeInBytes": 0
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "AzureClassicRunAsCertificate",
      "apiVersion": "2015-10-31",
      "properties": {
        "description": "This certificate is used to authenticate with Azure so that you can manage Azure classic resources from runbooks. For details on this certificate, or to manage it, go to this account’s Settings.  For example usage, see the tutorial runbook in this account.",
        "base64Value": "AzureClassicRunAsCertificate_base64Value')]"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/certificates",
      "name": "AzureRunAsCertificate",
      "apiVersion": "2015-10-31",
      "properties": {
        "description": "This certificate is used to authenticate with the service principal that was automatically created for this account. For details on this service principal and certificate, or to recreate them, go to this account’s Settings. For example usage, see the tutorial runbook in this account.",
        "base64Value": "AzureRunAsCertificate_base64Value')]"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "AzureClassicRunAsConnection",
      "apiVersion": "2015-10-31",
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureClassicCertificate"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/connections",
      "name": "AzureRunAsConnection",
      "apiVersion": "2015-10-31",
      "properties": {
        "description": null,
        "fieldDefinitionValues": null,
        "connectionType": {
          "name": "AzureServicePrincipal"
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', variables('azureAutomation_accountName')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "BGInfo",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm1Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "BGInfo",
      "apiVersion": "2016-03-30",
      "location": "parameters('location')",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm2Name'))]"
      ]
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm3Name'))]"
      ],
      "location": "parameters('location')",
      "name": "BGInfo",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines_vm4Name'))]"
      ],
      "location": "parameters('location')",
      "name": "BGInfo",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {}
      },
      "resources": [],
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ]
}
